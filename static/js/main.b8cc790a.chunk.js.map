{"version":3,"sources":["compo/MsgForm.js","compo/MyMsg.js","compo/TheirMsg.js","compo/ChatFeed.js","compo/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["MsgForm","props","useState","value","setValue","chatID","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","bind","SendOutlined","MyMsg","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","borderRadius","TheirMsg","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","background","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","classNmae","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8cc790a.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MsgForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatID, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatID);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatID, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatID, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MsgForm","const MyMsg = ({ message }) => {\r\n\r\n    // If my msg is an attachment return this code\r\n    if (message.attachments && message.attachments.length > 0) {\r\n        return (\r\n          <img\r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{ float: 'right' }}\r\n          />\r\n        );\r\n      }\r\n    \r\n      return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#171717', borderRadius: '25px' }}>\r\n          {message.text}\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default MyMsg","const TheirMsg = ({ lastMessage, message }) => {\r\n\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n      <div className=\"message-row\">\r\n        {isFirstMessageByUser && (\r\n          <div\r\n            className=\"message-avatar\"\r\n            style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n          />\r\n        )}\r\n        {message.attachments && message.attachments.length > 0\r\n          ? (\r\n            <img\r\n              src={message.attachments[0].file}\r\n              alt=\"message-attachment\"\r\n              className=\"message-image\"\r\n              style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n            />\r\n          )\r\n          : (\r\n            <div className=\"message\" style={{ float: 'left', color:'white', background: 'linear-gradient(90deg, #fc466b 0%,#3f5efb 100% )', marginLeft: isFirstMessageByUser ? '4px' : '48px', borderRadius: '25px' }}>\r\n              {message.text}\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TheirMsg","import MsgForm from './MsgForm'\r\nimport MyMsg from './MyMsg'\r\nimport TheirMsg from './TheirMsg'\r\n\r\nconst ChatFeed = (props) => {\r\n\r\n    const { chats, activeChat, userName, messages } = props\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    // console.log(chat, userName, messages)\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n        <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n                float: isMyMessage ? 'right' : 'left',\r\n                backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n            }}\r\n        />\r\n    ));\r\n\r\n    const renderMessages = () => {\r\n        // keys are IDs of our messages\r\n        const keys = Object.keys(messages)\r\n\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key]\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\r\n            const isMyMessage = userName === message.sender.username\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className='message-block'>\r\n                        {\r\n                            isMyMessage\r\n                                ? <MyMsg message={message} />\r\n                                : <TheirMsg message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div\r\n                        className='read-receipts'\r\n                        style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        })\r\n\r\n        if (!chat) return 'Loading ... ⏳'\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='chat-feed'>\r\n            <div className=\"chat-title-container\">\r\n                <div className='chat-title'>{chat?.title}</div>\r\n                <div classNmae='chat-subtitle'> {chat?.people.map((person) => ` ${person.person.username}`)} </div>\r\n            </div>\r\n            { renderMessages()}\r\n\r\n            <div style={{ height: '100px' }} />\r\n\r\n            <div className='message-form-container'>\r\n                <MsgForm {...props} chatID={activeChat} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = \"6597dfc9-9cfd-4df4-8916-68fe7f0a4f87\"\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n\r\n      setError('');\r\n\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.', err);\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Let's Talk ✌</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Log In</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import './App.css'\nimport { ChatEngine } from 'react-chat-engine'\nimport ChatFeed from './compo/ChatFeed'\nimport LoginForm from './compo/LoginForm'\n\nconst projectID = \"6597dfc9-9cfd-4df4-8916-68fe7f0a4f87\"\n\nfunction App() {\n  if (!localStorage.getItem('username')) return <LoginForm />;\n\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID={projectID}\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}